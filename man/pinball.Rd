% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R, R/S3_PinballLoss.R
\name{pinball.numeric}
\alias{pinball.numeric}
\alias{weighted.pinball.numeric}
\alias{pinball}
\alias{weighted.pinball}
\title{Compute the \eqn{\text{pinball}} \eqn{\text{loss}}}
\usage{
\method{pinball}{numeric}(actual, predicted, alpha = 0.5, deviance = FALSE, ...)

\method{weighted.pinball}{numeric}(actual, predicted, w, alpha = 0.5, deviance = FALSE, ...)

pinball(...)

weighted.pinball(...)
}
\arguments{
\item{actual}{A <\link{numeric}>-vector of \link{length} \eqn{n}. The observed (continuous) response variable.}

\item{predicted}{A <\link{numeric}>-vector of \link{length} \eqn{n}. The estimated (continuous) response variable.}

\item{alpha}{A <\link{numeric}>-value of \link{length} 1. The slope of the pinball loss function. \eqn{0.5} by default.}

\item{deviance}{A <\link{logical}>-value of \link{length} 1. \link{FALSE} by default. If \link{TRUE} the function returns the \eqn{D^2} loss.}

\item{...}{Arguments passed into other methods.}

\item{w}{A <\link{numeric}>-vector of \link{length} \eqn{n}. The weight assigned to each observation in the data. See \code{\link[stats:weighted.mean]{stats::weighted.mean()}} for more details.}
}
\value{
A <\link{numeric}> vector of \link{length} 1.
}
\description{
The \code{\link[=pinball]{pinball()}}-function computes the \href{https://en.wikipedia.org/wiki/Quantile_regression}{pinball loss} between
the observed and predicted <\link{numeric}> vectors. If If \code{w} is not \link{NULL}, the function returns the weighted pinball loss.
}
\section{Calculation}{


The pinball loss measures the accuracy of quantile predictions by penalizing overestimates and underestimates asymmetrically based on the specified quantile (\code{alpha}).

\strong{Weighted Pinball Loss}:
\deqn{\text{PinballLoss}_{\text{weighted}} = \frac{\sum_{i=1}^{n} w_i \cdot \left[ \alpha \cdot \max(0, y_i - \hat{y}_i) - (1 - \alpha) \cdot \max(0, \hat{y}_i - y_i) \right]}{\sum_{i=1}^{n} w_i}}
where:
\itemize{
\item \eqn{y_i} is the actual value,
\item \eqn{\hat{y}_i} is the predicted value,
\item \eqn{w_i} is the weight for observation \eqn{i},
\item \eqn{\alpha} is the quantile level.
}

\strong{Unweighted Pinball Loss}:
\deqn{\text{PinballLoss}_{\text{unweighted}} = \frac{1}{n} \sum_{i=1}^{n} \left[ \alpha \cdot \max(0, y_i - \hat{y}_i) - (1 - \alpha) \cdot \max(0, \hat{y}_i - y_i) \right]}
where:
\itemize{
\item \eqn{y_i} is the actual value,
\item \eqn{\hat{y}_i} is the predicted value,
\item \eqn{\alpha} is the quantile level.
}
}

\examples{
# 1) fit a linear
# regression
model <- lm(
  mpg ~ .,
  data = mtcars
)

# 1.1) define actual
# and predicted values
# to measure performance
actual    <- mtcars$mpg
predicted <- fitted(model)


# 2) calculate
# the metric
pinball(
  actual     = actual,
  predicted  = predicted
)

# 3) calculate
# the weighted metric
# using arbtrary weights
w <- rbeta(
  n = 1e3,
  shape1 = 10,
  shape2 = 2
)

pinball(
  actual     = actual,
  predicted  = predicted,
  w          = w
)
}
\seealso{
Other regression: 
\code{\link{ccc.numeric}()},
\code{\link{huberloss.numeric}()},
\code{\link{mae.numeric}()},
\code{\link{mape.numeric}()},
\code{\link{mpe.numeric}()},
\code{\link{mse.numeric}()},
\code{\link{rae.numeric}()},
\code{\link{rmse.numeric}()},
\code{\link{rmsle.numeric}()},
\code{\link{rrmse.numeric}()},
\code{\link{rsq.numeric}()},
\code{\link{smape.numeric}()}
}
\concept{regression}
