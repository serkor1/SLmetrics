% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{jaccard}
\alias{jaccard}
\alias{csi}
\alias{tscore}
\title{Compute the \eqn{\text{Jaccard}} \eqn{\text{index}}}
\usage{
# using `jaccard()`-function
jaccard(
  actual,
  predicted,
  aggregate = FALSE
)

# using `csi()`-function
csi(
  actual,
  predicted,
  aggregate = FALSE
)

# using `tscore()`-function
tscore(
  actual,
  predicted,
  aggregate = FALSE
)
}
\arguments{
\item{actual}{A <\link{factor}>-vector of \link{length} \eqn{n}, and \eqn{k} levels.}

\item{predicted}{A <\link{factor}>-vector of \link{length} \eqn{n}, and \eqn{k} levels.}

\item{aggregate}{A <\link{logical}>-value of \link{length} \eqn{1}. \link{FALSE} by default. If \link{TRUE} it returns the
micro average across all \eqn{k} classes}
}
\value{
If \code{aggregate} is \link{FALSE} (the default), a named <\link{numeric}>-vector of \link{length} k

If \code{aggregate} is \link{TRUE}, a <\link{numeric}>-vector of \link{length} 1
}
\description{
The \code{\link[=jaccard]{jaccard()}}-function computes the \href{https://en.wikipedia.org/wiki/Jaccard_index}{Jaccard Index}, also known as the Intersection over Union, between
two vectors of predicted and observed \code{\link[=factor]{factor()}} values.

When \code{aggregate = TRUE}, the function returns the micro-average Jaccard Index across all classes \eqn{k}.
By default, it returns the class-wise Jaccard Index.
}
\details{
Consider a classification problem with three classes: \code{A}, \code{B}, and \code{C}. The actual vector of \code{\link[=factor]{factor()}} values is defined as follows:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{## set seed
set.seed(1903)

## actual
factor(
  x = sample(x = 1:3, size = 10, replace = TRUE),
  levels = c(1, 2, 3),
  labels = c("A", "B", "C")
)
#>  [1] B A B B A C B C C A
#> Levels: A B C
}\if{html}{\out{</div>}}

Here, the values 1, 2, and 3 are mapped to \code{A}, \code{B}, and \code{C}, respectively. Now, suppose your model does not predict any \code{B}'s. The predicted vector of \code{\link[=factor]{factor()}} values would be defined as follows:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{## set seed
set.seed(1903)

## predicted
factor(
  x = sample(x = c(1, 3), size = 10, replace = TRUE),
  levels = c(1, 2, 3),
  labels = c("A", "B", "C")
)
#>  [1] C A C C C C C C A C
#> Levels: A B C
}\if{html}{\out{</div>}}

In both cases, \eqn{k = 3}, determined indirectly by the \code{levels} argument.
}
\section{Calculation}{


The metric is calcualted for each class \eqn{k} as follows,

\deqn{
  \frac{\#TP_k}{\#TP_k + \#FP_k + \#FN_k}
}

Where \eqn{\#TP_k}, \eqn{\#FP_k}, and \eqn{\#FN_k} represent the number of true positives, false positives, and false negatives for each class \eqn{k}, respectively.

When \code{aggregate = TRUE}, the micro-average is calculated as,

\deqn{
  \frac{\sum_{i = 1}^{k} TP_i}{\sum_{i = 1}^{k} TP_i + \sum_{i = 1}^{k} FP_k + \sum_{i = 1}^{k} FN_k}
}
}

\examples{
# 1) recode Iris
# to binary classification
# problem
iris$Species <- factor(
  x = as.numeric(
    iris$Species == "virginica"
  ),
  levels = c(1,0),
  labels = c("virginica", "others")
)

# 2) fit the logistic
# regression
model <- glm(
  formula = Species ~ Sepal.Length + Sepal.Width,
  data    = iris,
  family = binomial(
    link = "logit"
  )
)

# 3) generate predicted
# classes
predicted <- as.factor(
  ifelse(
    predict(model, type = "response") > 0.5,
    yes = "virginica",
    no  = "others"
  )
)

# 4) evaluate performance
# 4.1) by class
jaccard(
  actual    = iris$Species,
  predicted = predicted
)

# 4.2) macro-average
mean(
  jaccard(
    actual    = iris$Species,
    predicted = predicted
  )
)

# 4.3) micro-average
jaccard(
  actual    = iris$Species,
  predicted = predicted,
  aggregate = TRUE
)
}
\seealso{
Other classification: 
\code{\link{accuracy}()},
\code{\link{baccuracy}()},
\code{\link{cmatrix}()},
\code{\link{dor}()},
\code{\link{fbeta}()},
\code{\link{fdr}()},
\code{\link{fer}()},
\code{\link{fmi}()},
\code{\link{fpr}()},
\code{\link{kappa}()},
\code{\link{mcc}()},
\code{\link{nlr}()},
\code{\link{npv}()},
\code{\link{plr}()},
\code{\link{precision}()},
\code{\link{recall}()},
\code{\link{specificity}()},
\code{\link{zerooneloss}()}
}
\concept{classification}
